package mainPackage;

import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.JFileChooser;
import javax.swing.ImageIcon;
import javax.swing.filechooser.FileNameExtensionFilter;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Greko
 */
public class Interface extends javax.swing.JFrame {
    
    private runFile     lab;
    BufferedImage       in,out; 
    final JFileChooser  fc = new JFileChooser();
    int                 scale,param;
    String[]            operacje;
    

    public Interface() {
        initComponents();
        lab             = new runFile();
        this.scale      = 30;
        this.operacje   = this.lab.getOperations();
        for(String s:operacje)
        this.jComboBox1.addItem(s);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labelBefore = new javax.swing.JLabel();
        ChooseButton = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox();
        labelAfter = new javax.swing.JLabel();
        startButton = new javax.swing.JButton();
        sliderParametr = new javax.swing.JSlider();
        parametrMin = new javax.swing.JLabel();
        parametrMax = new javax.swing.JLabel();
        parametrNazwa = new javax.swing.JLabel();
        saveButton = new javax.swing.JButton();
        paramValue = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(700, 900));

        labelBefore.setPreferredSize(new java.awt.Dimension(500, 500));

        ChooseButton.setText("Wybierz Plik");
        ChooseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ChooseButtonActionPerformed(evt);
            }
        });

        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        startButton.setBackground(new java.awt.Color(51, 255, 0));
        startButton.setForeground(new java.awt.Color(0, 0, 255));
        startButton.setText("START");
        startButton.setEnabled(false);
        startButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startButtonActionPerformed(evt);
            }
        });

        sliderParametr.setEnabled(false);
        sliderParametr.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sliderParametrStateChanged(evt);
            }
        });

        parametrMin.setText("MIN");

        parametrMax.setText("MAX");

        parametrNazwa.setText("Nazwa parametru");

        saveButton.setText("Zapisz obraz");
        saveButton.setEnabled(false);
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(labelBefore, javax.swing.GroupLayout.PREFERRED_SIZE, 341, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(labelAfter, javax.swing.GroupLayout.DEFAULT_SIZE, 375, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(ChooseButton, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(saveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(50, 50, 50))))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(49, 49, 49)
                        .addComponent(startButton, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 461, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(208, 208, 208)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(parametrNazwa, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(paramValue, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(parametrMin)
                                .addGap(18, 18, 18)
                                .addComponent(sliderParametr, javax.swing.GroupLayout.PREFERRED_SIZE, 317, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(parametrMax)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ChooseButton)
                    .addComponent(saveButton))
                .addGap(45, 45, 45)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelBefore, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelAfter, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(parametrNazwa, javax.swing.GroupLayout.DEFAULT_SIZE, 23, Short.MAX_VALUE)
                    .addComponent(paramValue, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(sliderParametr, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(parametrMax, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(parametrMin, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(startButton, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ChooseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ChooseButtonActionPerformed
        // TODO add your handling code here:
        File home       = new File(System.getProperty("user.home"));
        File newHome    = new File(home.getAbsolutePath()+"/Downloads"); 
        fc.setCurrentDirectory(newHome);
        int returnVal   = fc.showOpenDialog(Interface.this);
        
        
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            //This is where a real application would open the file.
            File file = fc.getSelectedFile();
            this.startButton.setEnabled(true);
            this.saveButton.setEnabled(true);
            try {
                this.in = ImageIO.read(file);
           
                ImageIcon beforeIcon = new ImageIcon(this.in.getScaledInstance(16*this.scale,9*this.scale,WIDTH));
                ImageIcon afterIcon  = new ImageIcon(this.in.getScaledInstance(16*this.scale,9*this.scale,WIDTH));
               
                this.labelBefore.setIcon(beforeIcon);
                this.labelAfter.setIcon(afterIcon);
                
            } catch (IOException ex) {
                Logger.getLogger(Interface.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
           System.out.println("Cos poszlo nie tak przy otwarciu pliku");
        }
    }//GEN-LAST:event_ChooseButtonActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
        int chose = this.jComboBox1.getSelectedIndex();
         if(chose==0) this.setParams(null, null, null,0,1,false);
         if(chose==3) this.setParams("0","100","Parametr sepii",0,100,false);
         if(chose==12) this.setParams("-100","100","Jasność",-100,100,false);
         if(chose==15) this.setParams("-180","180","Obrot o kąt",-180,180,false);
         if(chose==16) this.setParams("0","30%","Losowy szum %",0,30,false);
         if(chose==17) this.setParams("0","30%","Losowy szum %",0,30,false);
         if(chose==18) this.setParams("3","7","Rozmiar maski odszumiania",3,7,false);
         if(chose==19) this.setParams("3","7","Rozmiar maski odszumiania",3,7,false);
         if(chose==20) this.setParams("3","7","Rozmiar maski odszumiania",3,7,false);
         
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void startButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startButtonActionPerformed
        // TODO add your handling code here:
        
        int choice = this.jComboBox1.getSelectedIndex();
        //System.out.println("Opcja : "+choice);
        param = this.sliderParametr.getValue();
        lab.run(in,choice,param);
        out = lab.getOutImage();
        ImageIcon afterIcon  = new ImageIcon(out.getScaledInstance(16*this.scale,9*this.scale,WIDTH));
        this.labelAfter.setIcon(afterIcon);
        
    }//GEN-LAST:event_startButtonActionPerformed

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed
        // TODO add your handling code here:
        fc.setFileFilter(new FileNameExtensionFilter("JPG lub PNG","jpg","png"));
        int returnVal = fc.showSaveDialog(Interface.this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File saveFile = fc.getSelectedFile();
            try{
                ImageIO.write(out,"jpg",saveFile);
                System.out.println("Plik zapisany");
            }
            catch(Exception e){
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_saveButtonActionPerformed

    private void sliderParametrStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_sliderParametrStateChanged
        // TODO add your handling code here:
        int value = this.sliderParametr.getValue();
        this.paramValue.setText(Integer.toString(value));
    }//GEN-LAST:event_sliderParametrStateChanged
    
    public void setParams(String min,String max,String nazwa,int minVal,int maxVal,boolean enable){
        if(enable = true){
            this.parametrMax.setText(max);
            this.parametrMin.setText(min);
            this.parametrNazwa.setText(nazwa);
            this.sliderParametr.setMaximum(maxVal);
            this.sliderParametr.setMinimum(minVal);
            this.sliderParametr.setEnabled(true);
        }
        else{
            this.parametrMax.setVisible(false);
            this.parametrMin.setVisible(false);
            this.parametrNazwa.setVisible(false);
        }
    }
       
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Interface().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ChooseButton;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel labelAfter;
    private javax.swing.JLabel labelBefore;
    private javax.swing.JLabel paramValue;
    private javax.swing.JLabel parametrMax;
    private javax.swing.JLabel parametrMin;
    private javax.swing.JLabel parametrNazwa;
    private javax.swing.JButton saveButton;
    private javax.swing.JSlider sliderParametr;
    private javax.swing.JButton startButton;
    // End of variables declaration//GEN-END:variables
}
